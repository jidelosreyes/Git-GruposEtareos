//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GruposEtareos.BI
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class GruposEtareosEntities : DbContext
    {
        public GruposEtareosEntities()
            : base(EFConnectionStringDynamic.getConnectionStringUDL())
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<GN_UNIDAD_MEDIDA> GN_UNIDAD_MEDIDA { get; set; }
        public virtual DbSet<SEXO> SEXOes { get; set; }
        public virtual DbSet<PS_GRUPOS_ETAREOS> PS_GRUPOS_ETAREOS { get; set; }
        public virtual DbSet<GN_USUARIO_SISTEMA> GN_USUARIO_SISTEMA { get; set; }
        public virtual DbSet<GN_CLASIFIC_CONTABLE> GN_CLASIFIC_CONTABLE { get; set; }
        public virtual DbSet<GN_CONCEPTOS_CONTABLES> GN_CONCEPTOS_CONTABLES { get; set; }
        public virtual DbSet<GN_TIPO_SERVICIOS> GN_TIPO_SERVICIOS { get; set; }
        public virtual DbSet<GRUPO> GRUPOes { get; set; }
        public virtual DbSet<NIVEL_COMPLEJIDAD> NIVEL_COMPLEJIDAD { get; set; }
        public virtual DbSet<SUB_GRUPO> SUB_GRUPO { get; set; }
        public virtual DbSet<DIAGNOSTICO> DIAGNOSTICOS { get; set; }
        public virtual DbSet<GN_PLANES> GN_PLANES { get; set; }
        public virtual DbSet<GN_TIPO_TECNOLOGIA> GN_TIPO_TECNOLOGIA { get; set; }
        public virtual DbSet<PS_CLASIFICACION_POS> PS_CLASIFICACION_POS { get; set; }
        public virtual DbSet<SV_ESTADO_SERVICIOS> SV_ESTADO_SERVICIOS { get; set; }
        public virtual DbSet<SV_PROFESIONAL_AUTORIZA> SV_PROFESIONAL_AUTORIZA { get; set; }
        public virtual DbSet<GN_NIVEL_AUTORIZ> GN_NIVEL_AUTORIZ { get; set; }
        public virtual DbSet<PS_CONDICIONES> PS_CONDICIONES { get; set; }
        public virtual DbSet<PS_POS_CONDICIONADO> PS_POS_CONDICIONADO { get; set; }
        public virtual DbSet<PS_SERVICIOS> PS_SERVICIOS { get; set; }
        public virtual DbSet<GN_ADMINXREGIONAL> GN_ADMINXREGIONAL { get; set; }
        public virtual DbSet<PS_DETALLE_SERVICIOS> PS_DETALLE_SERVICIOS { get; set; }
    
        public virtual ObjectResult<P_CONSULTAR_SUB_GRUPO_X_FILTRO_Result> P_CONSULTAR_SUB_GRUPO_X_FILTRO(string par_cod_grupo, string par_cod_subgrupo, string par_descripcion)
        {
            var par_cod_grupoParameter = par_cod_grupo != null ?
                new ObjectParameter("par_cod_grupo", par_cod_grupo) :
                new ObjectParameter("par_cod_grupo", typeof(string));
    
            var par_cod_subgrupoParameter = par_cod_subgrupo != null ?
                new ObjectParameter("par_cod_subgrupo", par_cod_subgrupo) :
                new ObjectParameter("par_cod_subgrupo", typeof(string));
    
            var par_descripcionParameter = par_descripcion != null ?
                new ObjectParameter("par_descripcion", par_descripcion) :
                new ObjectParameter("par_descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_CONSULTAR_SUB_GRUPO_X_FILTRO_Result>("P_CONSULTAR_SUB_GRUPO_X_FILTRO", par_cod_grupoParameter, par_cod_subgrupoParameter, par_descripcionParameter);
        }
    
        public virtual ObjectResult<P_PS_CONSULTAR_TIPO_TECNOLOGIA_Result> P_PS_CONSULTAR_TIPO_TECNOLOGIA(string cOD_DIC, string dESCRIPCION_DCI, Nullable<int> cOD_TIPO_SERVICIO)
        {
            var cOD_DICParameter = cOD_DIC != null ?
                new ObjectParameter("COD_DIC", cOD_DIC) :
                new ObjectParameter("COD_DIC", typeof(string));
    
            var dESCRIPCION_DCIParameter = dESCRIPCION_DCI != null ?
                new ObjectParameter("DESCRIPCION_DCI", dESCRIPCION_DCI) :
                new ObjectParameter("DESCRIPCION_DCI", typeof(string));
    
            var cOD_TIPO_SERVICIOParameter = cOD_TIPO_SERVICIO.HasValue ?
                new ObjectParameter("COD_TIPO_SERVICIO", cOD_TIPO_SERVICIO) :
                new ObjectParameter("COD_TIPO_SERVICIO", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_PS_CONSULTAR_TIPO_TECNOLOGIA_Result>("P_PS_CONSULTAR_TIPO_TECNOLOGIA", cOD_DICParameter, dESCRIPCION_DCIParameter, cOD_TIPO_SERVICIOParameter);
        }
    }
}
